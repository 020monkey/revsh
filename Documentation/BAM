
################################################################################
# Overview
################################################################################

The revsh tool is a remote terminal and reverse vpn tool designed by and for
professional pentesters to empower them with a functioning tty and superior
pivoting options.

This tool is not replacement for netcat, as their stated goals are entirely
different. With the addition of revsh to the pentester toolkit, both netcat
and revsh can be viewed as partners in the "Bootstrap Attack Methodology",
outlined below.


################################################################################
# The Bootstrap Attack Methodology
################################################################################

Stage 0 - No RCE

	You have no control over the target system.


Stage 1 - Minimal RCE - Non-privileged User

	You have RCE on the target system, probably though a vulnerable web application.
	If the execution isn't entirely arbitrary or repeatable, you will want to pursue
	that goal in this stage. In general this is done by dropping a minimal webshell
	on the system.


Stage 2 - Arbitrary RCE - Non-privileged User

	You now can execute arbitrary RCE. Use this download a copy of netcat with
	GAPING_SECURITY_HOLE enabled, and then launch it. I recommend using netcat to 
	perform this action and move to stage 3 instead of downloading revsh and 
	skipping directly to stage 4. Netcat is a minimalist tool with little to no 
	dependence on libraries or system interfaces. It is infinitely backwards 
	compatible and at this stage you haven't had a chance to perform a proper 
	analysis of the system locally. Netcat will give you a simple but stable shell.


Stage 3 - Reverse Shell - Non-privileged User

	While stable, the netcat reverse shell can be frustrating to use for system
	analysis and its pivoting capabilities quickly become overly complex. Use this
	simple reverse shell to download a copy of revsh and launch it.

	In this stage many operators will drop an ssh key and login 
	directly. This is dangerous in an environment with centralized logging and 
	automated analysis of ssh logins. Further, ssh won't open a reverse shell 
	without the operator enabling logins to his kali box and leaving credentials
	in some form on the target host for Incident Responders to find. This leaves 
	the operator open to a counter-hack operation. 


Stage 4 - Reverse Terminal - Non-privileged User

	At this stage you have a full reverse terminal as though you had loggedin 
	properly, but without any such login appearing in 'who' or 'last'. (revsh 
	does not opt-in to the utmp/wtmp process.) As a non-privileged user revsh
	offers traditional point-to-point proxies and socks proxies. If further
	privilege escalation isn't possible or is deemed to noisy, you can stop
	here and have all of the traditional pivot methods available to you. (e.g
	point-to-point passthrough for specific targets, burpsuite for web attacks,
	and proxychains for all others.)

Stage 5 - Reverse Terminal / Reverse VPN - Privileged User

	XXX Add verbiage.
	... tun / tap support for forwarding
	of raw ip packets / ethernet frames. This range of options makes pivoting
	trivial. (Want to pivot? Setup a bridge device on the remote host then 
	simply perform a dchp request on tap0 from your kali box. Now you have an IP
	address on the target network.)

